version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  vault:
    image: hashicorp/vault:1.19
    container_name: vault
    restart: unless-stopped
    ports:
      - "8200:8200"
    volumes:
      - ./vault/scripts:/scripts  # Папка со скриптами инициализации
      - vault_data:/vault/file
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=${SPRING_CLOUD_VAULT_TOKEN} # Токен для доступа
      - VAULT_ADDR=${SPRING_CLOUD_VAULT_URI_FULL}
    cap_add:
      - IPC_LOCK
    command: server -dev
    healthcheck:
      test: [ "CMD", "vault", "status", "-format=json" ]
      interval: 5s
      timeout: 5s
      retries: 10

  # Сервис для загрузки секретов (запустится после Vault)
  vault-init:
    image: hashicorp/vault:1.19
    depends_on:
      vault:
        condition: service_healthy
    volumes:
      - ./vault/scripts:/scripts
    entrypoint: [ "sh", "/scripts/init-vault.sh" ]
    environment:
      VAULT_ADDR: ${SPRING_CLOUD_VAULT_URI_FULL}
      VAULT_TOKEN: ${SPRING_CLOUD_VAULT_TOKEN}

  app:
    build: .
    env_file: .env
    depends_on:
      - vault
      - mongo
      - rabbitmq
    ports:
      - "8081:8081"

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: unless-stopped
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    ports:
      - "27017:27017"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"  # AMQP порт
      - "15672:15672" # Web UI порт

volumes:
  vault_data:
    driver: local
  mongo-data:
    driver: local
  rabbitmq_data:
    driver: local